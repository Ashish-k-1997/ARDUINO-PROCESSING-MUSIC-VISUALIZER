/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */


public void Start_stop(GButton source, GEvent event) 
{ //_CODE_:main_button:659590:
  
  if(main==false)
  {                               //All process started.
   main=true;
   main_button.setText("STOP");
   main_button.setTextBold();
   Start();
  }
  else
  {                             // All process stopped.
   main=false;
   main_button.setText("START");
   main_button.setTextBold();

}
} //_CODE_:main_button:659590:

public void exit(GButton source, GEvent event) 
{ //_CODE_:exit_button:561421:
  stop();
  
} //_CODE_:exit_button:561421:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:642127:

 freq_width=slider1.getValueI();
} //_CODE_:slider1:642127:

public void default_button_click(GButton source, GEvent event) { //_CODE_:default_button:954349:
 
 freq_width=250;
 slider1.setLimits(250, 10, 1000);

} //_CODE_:default_button:954349:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  
  
  
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  main_button = new GButton(this, 187, 139, 80, 30);
  main_button.setText("START");
  main_button.setTextBold();
  main_button.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  main_button.addEventHandler(this, "Start_stop");
  exit_button = new GButton(this, 430, 0, 49, 32);
  exit_button.setText("EXIT");
  exit_button.setTextBold();
  exit_button.setLocalColorScheme(GCScheme.RED_SCHEME);
  exit_button.addEventHandler(this, "exit");
  slider1 = new GSlider(this, 0, 280, 480, 40, 10.0);
  slider1.setShowValue(true);
  slider1.setLimits(250, 10, 1000);
  slider1.setNumberFormat(G4P.INTEGER, 0);
  slider1.setLocalColorScheme(GCScheme.RED_SCHEME);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  default_button = new GButton(this, 0, 253, 70, 19);
  default_button.setText("DEFAULT");
  default_button.addEventHandler(this, "default_button_click");
  label1 = new GLabel(this, 0, 222, 600, 20);
  label1.setText("Frequency width : larger-less intensity per band, Smaller-range being limited.");
  label1.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit

GButton main_button; 
GButton exit_button; 
GSlider slider1; 
GButton default_button; 
GLabel label1; 